#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PetShopDB")]
public partial class DataClassesPetShopDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertkategorija(kategorija instance);
  partial void Updatekategorija(kategorija instance);
  partial void Deletekategorija(kategorija instance);
  partial void Insertproizvod(proizvod instance);
  partial void Updateproizvod(proizvod instance);
  partial void Deleteproizvod(proizvod instance);
  partial void Insertkorpa(korpa instance);
  partial void Updatekorpa(korpa instance);
  partial void Deletekorpa(korpa instance);
  partial void Insertkomentar(komentar instance);
  partial void Updatekomentar(komentar instance);
  partial void Deletekomentar(komentar instance);
  partial void Insertkorisnik(korisnik instance);
  partial void Updatekorisnik(korisnik instance);
  partial void Deletekorisnik(korisnik instance);
  #endregion
	
	public DataClassesPetShopDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PetShopDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesPetShopDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesPetShopDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesPetShopDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesPetShopDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<kategorija> kategorijas
	{
		get
		{
			return this.GetTable<kategorija>();
		}
	}
	
	public System.Data.Linq.Table<proizvod> proizvods
	{
		get
		{
			return this.GetTable<proizvod>();
		}
	}
	
	public System.Data.Linq.Table<komentar_view> komentar_views
	{
		get
		{
			return this.GetTable<komentar_view>();
		}
	}
	
	public System.Data.Linq.Table<korpa> korpas
	{
		get
		{
			return this.GetTable<korpa>();
		}
	}
	
	public System.Data.Linq.Table<komentar> komentars
	{
		get
		{
			return this.GetTable<komentar>();
		}
	}
	
	public System.Data.Linq.Table<korisnik> korisniks
	{
		get
		{
			return this.GetTable<korisnik>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.kategorija")]
public partial class kategorija : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Naziv;
	
	private EntitySet<proizvod> _proizvods;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
	
	public kategorija()
	{
		this._proizvods = new EntitySet<proizvod>(new Action<proizvod>(this.attach_proizvods), new Action<proizvod>(this.detach_proizvods));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Naziv
	{
		get
		{
			return this._Naziv;
		}
		set
		{
			if ((this._Naziv != value))
			{
				this.OnNazivChanging(value);
				this.SendPropertyChanging();
				this._Naziv = value;
				this.SendPropertyChanged("Naziv");
				this.OnNazivChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kategorija_proizvod", Storage="_proizvods", ThisKey="ID", OtherKey="ID_Kategorije")]
	public EntitySet<proizvod> proizvods
	{
		get
		{
			return this._proizvods;
		}
		set
		{
			this._proizvods.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_proizvods(proizvod entity)
	{
		this.SendPropertyChanging();
		entity.kategorija = this;
	}
	
	private void detach_proizvods(proizvod entity)
	{
		this.SendPropertyChanging();
		entity.kategorija = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.proizvod")]
public partial class proizvod : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Naziv;
	
	private double _Cena;
	
	private string _Opis;
	
	private string _Slika;
	
	private string _Tip;
	
	private int _ID_Kategorije;
	
	private EntitySet<korpa> _korpas;
	
	private EntitySet<komentar> _komentars;
	
	private EntityRef<kategorija> _kategorija;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnCenaChanging(double value);
    partial void OnCenaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnSlikaChanging(string value);
    partial void OnSlikaChanged();
    partial void OnTipChanging(string value);
    partial void OnTipChanged();
    partial void OnID_KategorijeChanging(int value);
    partial void OnID_KategorijeChanged();
    #endregion
	
	public proizvod()
	{
		this._korpas = new EntitySet<korpa>(new Action<korpa>(this.attach_korpas), new Action<korpa>(this.detach_korpas));
		this._komentars = new EntitySet<komentar>(new Action<komentar>(this.attach_komentars), new Action<komentar>(this.detach_komentars));
		this._kategorija = default(EntityRef<kategorija>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Naziv
	{
		get
		{
			return this._Naziv;
		}
		set
		{
			if ((this._Naziv != value))
			{
				this.OnNazivChanging(value);
				this.SendPropertyChanging();
				this._Naziv = value;
				this.SendPropertyChanged("Naziv");
				this.OnNazivChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Float NOT NULL")]
	public double Cena
	{
		get
		{
			return this._Cena;
		}
		set
		{
			if ((this._Cena != value))
			{
				this.OnCenaChanging(value);
				this.SendPropertyChanging();
				this._Cena = value;
				this.SendPropertyChanged("Cena");
				this.OnCenaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(300)")]
	public string Opis
	{
		get
		{
			return this._Opis;
		}
		set
		{
			if ((this._Opis != value))
			{
				this.OnOpisChanging(value);
				this.SendPropertyChanging();
				this._Opis = value;
				this.SendPropertyChanged("Opis");
				this.OnOpisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slika", DbType="NVarChar(200)")]
	public string Slika
	{
		get
		{
			return this._Slika;
		}
		set
		{
			if ((this._Slika != value))
			{
				this.OnSlikaChanging(value);
				this.SendPropertyChanging();
				this._Slika = value;
				this.SendPropertyChanged("Slika");
				this.OnSlikaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip", DbType="NVarChar(200)")]
	public string Tip
	{
		get
		{
			return this._Tip;
		}
		set
		{
			if ((this._Tip != value))
			{
				this.OnTipChanging(value);
				this.SendPropertyChanging();
				this._Tip = value;
				this.SendPropertyChanged("Tip");
				this.OnTipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kategorije", DbType="Int NOT NULL")]
	public int ID_Kategorije
	{
		get
		{
			return this._ID_Kategorije;
		}
		set
		{
			if ((this._ID_Kategorije != value))
			{
				if (this._kategorija.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_KategorijeChanging(value);
				this.SendPropertyChanging();
				this._ID_Kategorije = value;
				this.SendPropertyChanged("ID_Kategorije");
				this.OnID_KategorijeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proizvod_korpa", Storage="_korpas", ThisKey="ID", OtherKey="ID_Proizvoda")]
	public EntitySet<korpa> korpas
	{
		get
		{
			return this._korpas;
		}
		set
		{
			this._korpas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proizvod_komentar", Storage="_komentars", ThisKey="ID", OtherKey="ID_Proizvoda")]
	public EntitySet<komentar> komentars
	{
		get
		{
			return this._komentars;
		}
		set
		{
			this._komentars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kategorija_proizvod", Storage="_kategorija", ThisKey="ID_Kategorije", OtherKey="ID", IsForeignKey=true)]
	public kategorija kategorija
	{
		get
		{
			return this._kategorija.Entity;
		}
		set
		{
			kategorija previousValue = this._kategorija.Entity;
			if (((previousValue != value) 
						|| (this._kategorija.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._kategorija.Entity = null;
					previousValue.proizvods.Remove(this);
				}
				this._kategorija.Entity = value;
				if ((value != null))
				{
					value.proizvods.Add(this);
					this._ID_Kategorije = value.ID;
				}
				else
				{
					this._ID_Kategorije = default(int);
				}
				this.SendPropertyChanged("kategorija");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_korpas(korpa entity)
	{
		this.SendPropertyChanging();
		entity.proizvod = this;
	}
	
	private void detach_korpas(korpa entity)
	{
		this.SendPropertyChanging();
		entity.proizvod = null;
	}
	
	private void attach_komentars(komentar entity)
	{
		this.SendPropertyChanging();
		entity.proizvod = this;
	}
	
	private void detach_komentars(komentar entity)
	{
		this.SendPropertyChanging();
		entity.proizvod = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.komentar_view")]
public partial class komentar_view
{
	
	private string _Naziv;
	
	private double _Cena;
	
	private System.Nullable<int> _Kolicina;
	
	public komentar_view()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Naziv
	{
		get
		{
			return this._Naziv;
		}
		set
		{
			if ((this._Naziv != value))
			{
				this._Naziv = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Float NOT NULL")]
	public double Cena
	{
		get
		{
			return this._Cena;
		}
		set
		{
			if ((this._Cena != value))
			{
				this._Cena = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int")]
	public System.Nullable<int> Kolicina
	{
		get
		{
			return this._Kolicina;
		}
		set
		{
			if ((this._Kolicina != value))
			{
				this._Kolicina = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.korpa")]
public partial class korpa : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID_Proizvoda;
	
	private int _ID_Korisnika;
	
	private int _Kolicina;
	
	private EntityRef<proizvod> _proizvod;
	
	private EntityRef<korisnik> _korisnik;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProizvodaChanging(int value);
    partial void OnID_ProizvodaChanged();
    partial void OnID_KorisnikaChanging(int value);
    partial void OnID_KorisnikaChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    #endregion
	
	public korpa()
	{
		this._proizvod = default(EntityRef<proizvod>);
		this._korisnik = default(EntityRef<korisnik>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proizvoda", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID_Proizvoda
	{
		get
		{
			return this._ID_Proizvoda;
		}
		set
		{
			if ((this._ID_Proizvoda != value))
			{
				if (this._proizvod.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_ProizvodaChanging(value);
				this.SendPropertyChanging();
				this._ID_Proizvoda = value;
				this.SendPropertyChanged("ID_Proizvoda");
				this.OnID_ProizvodaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Korisnika", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID_Korisnika
	{
		get
		{
			return this._ID_Korisnika;
		}
		set
		{
			if ((this._ID_Korisnika != value))
			{
				if (this._korisnik.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_KorisnikaChanging(value);
				this.SendPropertyChanging();
				this._ID_Korisnika = value;
				this.SendPropertyChanged("ID_Korisnika");
				this.OnID_KorisnikaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
	public int Kolicina
	{
		get
		{
			return this._Kolicina;
		}
		set
		{
			if ((this._Kolicina != value))
			{
				this.OnKolicinaChanging(value);
				this.SendPropertyChanging();
				this._Kolicina = value;
				this.SendPropertyChanged("Kolicina");
				this.OnKolicinaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proizvod_korpa", Storage="_proizvod", ThisKey="ID_Proizvoda", OtherKey="ID", IsForeignKey=true)]
	public proizvod proizvod
	{
		get
		{
			return this._proizvod.Entity;
		}
		set
		{
			proizvod previousValue = this._proizvod.Entity;
			if (((previousValue != value) 
						|| (this._proizvod.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._proizvod.Entity = null;
					previousValue.korpas.Remove(this);
				}
				this._proizvod.Entity = value;
				if ((value != null))
				{
					value.korpas.Add(this);
					this._ID_Proizvoda = value.ID;
				}
				else
				{
					this._ID_Proizvoda = default(int);
				}
				this.SendPropertyChanged("proizvod");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="korisnik_korpa", Storage="_korisnik", ThisKey="ID_Korisnika", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public korisnik korisnik
	{
		get
		{
			return this._korisnik.Entity;
		}
		set
		{
			korisnik previousValue = this._korisnik.Entity;
			if (((previousValue != value) 
						|| (this._korisnik.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._korisnik.Entity = null;
					previousValue.korpas.Remove(this);
				}
				this._korisnik.Entity = value;
				if ((value != null))
				{
					value.korpas.Add(this);
					this._ID_Korisnika = value.ID;
				}
				else
				{
					this._ID_Korisnika = default(int);
				}
				this.SendPropertyChanged("korisnik");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.komentar")]
public partial class komentar : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID_Proizvoda;
	
	private int _ID_Korisnika;
	
	private string _Sadrzaj;
	
	private System.DateTime _Datum;
	
	private int _ID_Komentara;
	
	private EntityRef<proizvod> _proizvod;
	
	private EntityRef<korisnik> _korisnik;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProizvodaChanging(int value);
    partial void OnID_ProizvodaChanged();
    partial void OnID_KorisnikaChanging(int value);
    partial void OnID_KorisnikaChanged();
    partial void OnSadrzajChanging(string value);
    partial void OnSadrzajChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnID_KomentaraChanging(int value);
    partial void OnID_KomentaraChanged();
    #endregion
	
	public komentar()
	{
		this._proizvod = default(EntityRef<proizvod>);
		this._korisnik = default(EntityRef<korisnik>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proizvoda", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID_Proizvoda
	{
		get
		{
			return this._ID_Proizvoda;
		}
		set
		{
			if ((this._ID_Proizvoda != value))
			{
				if (this._proizvod.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_ProizvodaChanging(value);
				this.SendPropertyChanging();
				this._ID_Proizvoda = value;
				this.SendPropertyChanged("ID_Proizvoda");
				this.OnID_ProizvodaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Korisnika", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID_Korisnika
	{
		get
		{
			return this._ID_Korisnika;
		}
		set
		{
			if ((this._ID_Korisnika != value))
			{
				if (this._korisnik.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnID_KorisnikaChanging(value);
				this.SendPropertyChanging();
				this._ID_Korisnika = value;
				this.SendPropertyChanged("ID_Korisnika");
				this.OnID_KorisnikaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sadrzaj", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Sadrzaj
	{
		get
		{
			return this._Sadrzaj;
		}
		set
		{
			if ((this._Sadrzaj != value))
			{
				this.OnSadrzajChanging(value);
				this.SendPropertyChanging();
				this._Sadrzaj = value;
				this.SendPropertyChanged("Sadrzaj");
				this.OnSadrzajChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
	public System.DateTime Datum
	{
		get
		{
			return this._Datum;
		}
		set
		{
			if ((this._Datum != value))
			{
				this.OnDatumChanging(value);
				this.SendPropertyChanging();
				this._Datum = value;
				this.SendPropertyChanged("Datum");
				this.OnDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Komentara", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID_Komentara
	{
		get
		{
			return this._ID_Komentara;
		}
		set
		{
			if ((this._ID_Komentara != value))
			{
				this.OnID_KomentaraChanging(value);
				this.SendPropertyChanging();
				this._ID_Komentara = value;
				this.SendPropertyChanged("ID_Komentara");
				this.OnID_KomentaraChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proizvod_komentar", Storage="_proizvod", ThisKey="ID_Proizvoda", OtherKey="ID", IsForeignKey=true)]
	public proizvod proizvod
	{
		get
		{
			return this._proizvod.Entity;
		}
		set
		{
			proizvod previousValue = this._proizvod.Entity;
			if (((previousValue != value) 
						|| (this._proizvod.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._proizvod.Entity = null;
					previousValue.komentars.Remove(this);
				}
				this._proizvod.Entity = value;
				if ((value != null))
				{
					value.komentars.Add(this);
					this._ID_Proizvoda = value.ID;
				}
				else
				{
					this._ID_Proizvoda = default(int);
				}
				this.SendPropertyChanged("proizvod");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="korisnik_komentar", Storage="_korisnik", ThisKey="ID_Korisnika", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public korisnik korisnik
	{
		get
		{
			return this._korisnik.Entity;
		}
		set
		{
			korisnik previousValue = this._korisnik.Entity;
			if (((previousValue != value) 
						|| (this._korisnik.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._korisnik.Entity = null;
					previousValue.komentars.Remove(this);
				}
				this._korisnik.Entity = value;
				if ((value != null))
				{
					value.komentars.Add(this);
					this._ID_Korisnika = value.ID;
				}
				else
				{
					this._ID_Korisnika = default(int);
				}
				this.SendPropertyChanged("korisnik");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.korisnik")]
public partial class korisnik : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Ime;
	
	private string _Prezime;
	
	private string _UserName;
	
	private string _Passwrod;
	
	private string _EMail;
	
	private string _Role;
	
	private EntitySet<korpa> _korpas;
	
	private EntitySet<komentar> _komentars;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswrodChanging(string value);
    partial void OnPasswrodChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
	
	public korisnik()
	{
		this._korpas = new EntitySet<korpa>(new Action<korpa>(this.attach_korpas), new Action<korpa>(this.detach_korpas));
		this._komentars = new EntitySet<komentar>(new Action<komentar>(this.attach_komentars), new Action<komentar>(this.detach_komentars));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Ime
	{
		get
		{
			return this._Ime;
		}
		set
		{
			if ((this._Ime != value))
			{
				this.OnImeChanging(value);
				this.SendPropertyChanging();
				this._Ime = value;
				this.SendPropertyChanged("Ime");
				this.OnImeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50)")]
	public string Prezime
	{
		get
		{
			return this._Prezime;
		}
		set
		{
			if ((this._Prezime != value))
			{
				this.OnPrezimeChanging(value);
				this.SendPropertyChanging();
				this._Prezime = value;
				this.SendPropertyChanged("Prezime");
				this.OnPrezimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Passwrod
	{
		get
		{
			return this._Passwrod;
		}
		set
		{
			if ((this._Passwrod != value))
			{
				this.OnPasswrodChanging(value);
				this.SendPropertyChanging();
				this._Passwrod = value;
				this.SendPropertyChanged("Passwrod");
				this.OnPasswrodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMail
	{
		get
		{
			return this._EMail;
		}
		set
		{
			if ((this._EMail != value))
			{
				this.OnEMailChanging(value);
				this.SendPropertyChanging();
				this._EMail = value;
				this.SendPropertyChanged("EMail");
				this.OnEMailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="korisnik_korpa", Storage="_korpas", ThisKey="ID", OtherKey="ID_Korisnika")]
	public EntitySet<korpa> korpas
	{
		get
		{
			return this._korpas;
		}
		set
		{
			this._korpas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="korisnik_komentar", Storage="_komentars", ThisKey="ID", OtherKey="ID_Korisnika")]
	public EntitySet<komentar> komentars
	{
		get
		{
			return this._komentars;
		}
		set
		{
			this._komentars.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_korpas(korpa entity)
	{
		this.SendPropertyChanging();
		entity.korisnik = this;
	}
	
	private void detach_korpas(korpa entity)
	{
		this.SendPropertyChanging();
		entity.korisnik = null;
	}
	
	private void attach_komentars(komentar entity)
	{
		this.SendPropertyChanging();
		entity.korisnik = this;
	}
	
	private void detach_komentars(komentar entity)
	{
		this.SendPropertyChanging();
		entity.korisnik = null;
	}
}
#pragma warning restore 1591
